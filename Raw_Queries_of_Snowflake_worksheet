#### THESE_ARE_2_TABLES

select * from uber_trip_details;
select * from loc_info;


-- 1. Total Bookings in the given timeline.

select count(Trip_id) as Total_bookings 
from uber_trip_details;



-- 2. Total revenue generated by Uber in the given timeline.

select round(sum(fare_amnt)+sum(Surge_Fee),0) as Total_revenue 
from uber_trip_details;



-- 3. Find Average Revenue Value per ride.

select round((sum(fare_amnt)+sum(Surge_Fee))/count(Trip_id),0) as Average_Revenue_Per_Ride 
from uber_trip_details;



-- 4. Find Total Trips Distance

select concat(round(sum(TRIPDIST),0),' Km') as Total_Trip_Distance 
from uber_trip_details;


-- 5. Find Average Trips Distance and also add 'Km' in output.

select concat(round(sum(TRIPDIST)/count(Trip_id),1),' Km') as Average_Trip_Distance from uber_trip_details;



-- 6. Find Average Trip Time Per Ride in seconds.
 
select 
round(sum(timestampdiff(second,to_timestamp(pickupdate || ' ' || pickuptime) ,to_timestamp(dropday || ' ' || droptime)))/
(select count(*) from uber_trip_details)/60,1) Avg_Trip_Time
from uber_trip_details 



--- 7. Find Total Rev generated by Transaction_Type

select payment_type,
concat('$ ',round(sum(fare_amnt)+sum(surge_fee),0)) as Total_Transaction_by_Payment_Type 
from uber_trip_details
group by payment_type 
order by round(sum(fare_amnt)+sum(surge_fee),0) DESC



--- 8. Find Total no of bookings , total ditance covered and revenue on the basis of day and Night.

select 
    case when pickuptime>='20:00:00' or pickuptime<='05:00:00' then 'Night' else 'Day' end as DayorNight,
    count(*) as Total_bookings,
    round(sum(tripdist),1) Total_Distance_in_Km,
    round(sum(fare_amnt)+sum(Surge_Fee),0) as Total_revenue_$ 
from uber_trip_details 
group by 1
Order by case DayorNight 
    when 'Day' then 1 
    else 2 end 


    
-- 9. Find key performance indicators like Total Bookings, Total Booking Value, Avg Booking Value, Total Trip Distance across different Vehicle Types in Uber trips.

Select 
    Vehicle,
    count(*) as Total_Bookings,
    round(sum(fare_amnt)+sum(Surge_Fee),0) as Total_Booking_val_$,
    round((sum(fare_amnt)+sum(Surge_Fee))/count(*),1) Avg_Booking_Value,
    round(sum(tripdist),1) Total_Trip_Distance_KM 
from uber_trip_details 
group by 1



-- 10. Find Total No of Bookings by Day_of_Week, by Total Percent Value and Total Distance coverage.

select 
    dayname(pickupdate) Day_of_Week,
    count(Trip_id) as Total_Bookings,
    round(count(Trip_id)*100.0/(select count(trip_id) from uber_trip_details),1) Percent_of_Total,
    round(sum(tripdist),1) Total_Trip_Distance_KM
from uber_trip_details 
group by Day_of_Week 
order by Case Day_of_week
    WHEN 'Sun' then 1
    when 'Mon' then 2
    when 'Tue' then 3
    when 'Wed' then 4
    when 'Thu' then 5
    when 'Fri' then 6
    else 7 END

    

-- 11. Find most Pickup Location and observe locations which contributes 80% of Total Count (PARETO ANALYSIS)

with cte as
    (select 
    location as Pickup_Location,
    count(location) as Total_count,
    round((count(location)*100.0)/(select count(*) from uber_trip_details),1) as Percent_of_total,
    sum(round((count(location)*100.0)/(select count(*) from uber_trip_details),1)) 
                            over(order by count(location) desc) Cum_sum_percentage
    from uber_trip_details u 
    inner join loc_info l on l.location_id=u.pickup_locid 
    group by 1
    order by 2 desc)
select * from cte 
where Cum_sum_percentage<=80


 
-- 12. Find most DropOff Location and observe locations which contributes 80% of Total Count (PARETO ANALYSIS)

with cte as
    (select location as Drop_Location,count(location) as Total_count,
    round((count(location)*100.0)/(select count(*) from uber_trip_details),1) as Percent_of_total,
    sum(round((count(location)*100.0)/(select count(*) from uber_trip_details),1)) over(order by count(location) desc) Cum_sum_percentage
    from uber_trip_details u 
    inner join loc_info l on l.location_id=u.drop_locid 
    group by 1)
 select * from cte 
 where Cum_sum_percentage<80
 order by Cum_sum_percentage

 

-- 13. We are working on Vehicle Distribution. Find vehicles distribution for top 20 Pickup_locations

with cte as
    (select 
        location,vehicle ,
        count(vehicle) cnt, dense_rank() over(partition by location order by count(vehicle)desc) rn
    from uber_trip_details u
    inner join loc_info l on l.location_id=u.pickup_locid 
    group by Location,Vehicle 
    order by location asc, cnt desc)
select location ,vehicle,case when rn=1 then cnt end as No_of_time
from cte
where rn =1



-- 14. Cluster trip times into dayparts (Morning, Afternoon, Evening, Night) and analyze trip frequency & revenue share per part.

select  
CASE
    WHEN (pickuptime) >= '04:30:00' AND (pickuptime) < '11:30:00' THEN 'Morning'
    WHEN (pickuptime) >= '11:30:00' AND (pickuptime) < '16:30:00' THEN 'Afternoon'
    WHEN (pickuptime) >= '16:30:00' AND (pickuptime) < '20:30:00' THEN 'Evening'
    ELSE 'Night'
  END AS time_of_day,count(*) as No_of_bookings,
  round(count(CASE
    WHEN (pickuptime) >= '04:30:00' AND (pickuptime) < '11:30:00' THEN 'Morning'
    WHEN (pickuptime) >= '11:30:00' AND (pickuptime) < '16:30:00' THEN 'Afternoon'
    WHEN (pickuptime) >= '16:30:00' AND (pickuptime) < '20:30:00' THEN 'Evening'
    ELSE 'Night'
  END)*100.0/(select count(*) from uber_trip_details),1) AS Perc_of_Booking,
  round((sum(fare_amnt)+sum(Surge_Fee))/(select sum(fare_amnt)+sum(Surge_Fee) from uber_trip_details)*100.0,1) as Revenue_percent_of_Total
from uber_trip_details group by 1 
order by case Time_of_Day 
    when 'Morning' then 1 
    when 'Afternoon' then 2 
    when 'Evening' then 3 
    when 'Night' then 4 end 

    

-- 15. Total Revenue Generated by Vehicles

select 
    vehicle, 
    round(sum(fare_amnt)+sum(Surge_Fee),0) as Total_revenue,
    round((sum(fare_amnt)+sum(Surge_Fee))/(select sum(fare_amnt)+sum(Surge_Fee) from uber_trip_details)*100,1) Perc_of_total
from uber_trip_details 
group by Vehicle
order by Total_revenue desc



-- 16. Which hours of the day generate the most revenue per passenger on average?

select 
    hour(pickuptime) hour_of_the_day, 
    count(*) as Total_Bookings,
    round(sum(fare_amnt)+sum(Surge_Fee)) as Total_Rev
from uber_trip_details 
group by hour_of_the_day 
order by hour_of_the_day 



-- 17. What is the average fare per km across different vehicle types?

select 
    vehicle, 
    round((sum(fare_amnt)+sum(Surge_Fee))/sum(TRIPDIST),2) as Avg_fare_per_km
from uber_trip_details 
group by vehicle
order by Avg_fare_per_km desc



-- 18. What pickup locations have the highest surge fee ratios compared to base fare?

select 
        location,
        sum(surge_fee) Surge_Fee,
        sum(fare_amnt) FARE_AMNT,
        round((sum(surge_fee)/sum(fare_amnt))*100,1) Ratio
    from uber_trip_details u
        inner join loc_info l on l.location_id=u.pickup_locid
    group by location 
    order by ratio desc
    limit 10


    
-- 19. Do longer trips (distance-wise) always correspond to higher fare? (Correlation analysis between distance and fare)

select 
    corr(tripdist,(fare_amnt+surge_fee)) as Correlation_val
from uber_trip_details
where surge_fee>0



-- 20. Create Pivot Table For Weekday vs Hour on No of Bookings

SELECT
    dayname(PickupDate) AS Weekday,
    COUNT(CASE WHEN hour(PickupTime) = 0 THEN 1 END) AS "00",
    COUNT(CASE WHEN hour(PickupTime) = 1 THEN 1 END) AS "01",
    COUNT(CASE WHEN hour(PickupTime) = 2 THEN 1 END) AS "02",
    COUNT(CASE WHEN hour(PickupTime) = 3 THEN 1 END) AS "03",
    COUNT(CASE WHEN hour(PickupTime) = 4 THEN 1 END) AS "04",
    COUNT(CASE WHEN hour(PickupTime) = 5 THEN 1 END) AS "05",
    COUNT(CASE WHEN hour(PickupTime) = 6 THEN 1 END) AS "06",
    COUNT(CASE WHEN hour(PickupTime) = 7 THEN 1 END) AS "07",
    COUNT(CASE WHEN hour(PickupTime) = 8 THEN 1 END) AS "08",
    COUNT(CASE WHEN hour(PickupTime) = 9 THEN 1 END) AS "09",
    COUNT(CASE WHEN hour(PickupTime) = 10 THEN 1 END) AS "10",
    COUNT(CASE WHEN hour(PickupTime) = 11 THEN 1 END) AS "11",
    COUNT(CASE WHEN hour(PickupTime) = 12 THEN 1 END) AS "12",
    COUNT(CASE WHEN hour(PickupTime) = 13 THEN 1 END) AS "13",
    COUNT(CASE WHEN hour(PickupTime) = 14 THEN 1 END) AS "14",
    COUNT(CASE WHEN hour(PickupTime) = 15 THEN 1 END) AS "15",
    COUNT(CASE WHEN hour(PickupTime) = 16 THEN 1 END) AS "16",
    COUNT(CASE WHEN hour(PickupTime) = 17 THEN 1 END) AS "17",
    COUNT(CASE WHEN hour(PickupTime) = 18 THEN 1 END) AS "18",
    COUNT(CASE WHEN hour(PickupTime) = 19 THEN 1 END) AS "19",
    COUNT(CASE WHEN hour(PickupTime) = 20 THEN 1 END) AS "20",
    COUNT(CASE WHEN hour(PickupTime) = 21 THEN 1 END) AS "21",
    COUNT(CASE WHEN hour(PickupTime) = 22 THEN 1 END) AS "22",
    COUNT(CASE WHEN hour(PickupTime) = 23 THEN 1 END) AS "23"
FROM
    uber_trip_details
GROUP BY
    Weekday

    

--- 21. What is the average number of passengers per trip across different payment types?

select 
    payment_type,
    avg(passemger_count) as avg_passenger_per_trip , sum(passemger_count)/(select count(*) from uber_trip_details)
from uber_trip_details
group by payment_type



-- 22. What is the average number of passengers per trip across different vehicle types?

select 
    vehicle,
    avg(passemger_count) as Avg_passenger_per_trip
from uber_trip_details
group by vehicle
order by Avg_passenger_per_trip desc



-- 23. Analyze fare distribution for each vehicle type and see which has the most consistent pricing throughout week.

select vehicle,
        sum(case when dayname(pickupdate) = 'Sun' then round((FARE_AMNT+surge_fee),1) end) as "Sunday",
        sum(case when dayname(pickupdate) = 'Mon' then round((FARE_AMNT+surge_fee),1) end) as "Monday",
        sum(case when dayname(pickupdate) = 'Tue' then round((FARE_AMNT+surge_fee),1) end) as "Tuesday",
        sum(case when dayname(pickupdate) = 'Wed' then round((FARE_AMNT+surge_fee),1) end) as "Wednesday",
        sum(case when dayname(pickupdate) = 'Thu' then round((FARE_AMNT+surge_fee),1) end) as "Thursday",
        sum(case when dayname(pickupdate) = 'Fri' then round((FARE_AMNT+surge_fee),1) end) as "Friday",
        sum(case when dayname(pickupdate) = 'Sat' then round((FARE_AMNT+surge_fee),1) end) as "Saturday"
from uber_trip_details
    group by vehicle;


    
-- 24. Which pickup locations have the highest average surge fee and how often do they appear?

select 
    location,
    round(avg(surge_fee),2) surge_fee,
    count(*) frequency
from uber_trip_details u 
    inner join loc_info l on l.location_id=u.pickup_locid
group by location
order by surge_fee desc 
limit 25


 
-- 25. Create Distance bins and find total bookings and revenue by percentage.

select 
    case when round(tripdist,0)<=4 then '<4 KM'
        when round(tripdist,0)>4 and round(tripdist,0)<=10 then '4-10 KM'
        when round(tripdist,0)>10 and round(tripdist,0)<=25 then '10-25 KM'
        when round(tripdist,0)>25 and round(tripdist,0)<=60 then '25-60 KM'
        when round(tripdist,0)>60 then '>60 KM'
        end as Distance_bins
        ,count(*) no_of_bookings,
        round((sum(fare_amnt)+sum(surge_fee))/(select (sum(fare_amnt)+sum(surge_fee)) from uber_trip_details)*100.0,1) as Rev_Perc_of_total
        from uber_trip_details 
        group by Distance_bins
        ORDER BY CASE Distance_bins
                WHEN '<4 KM' THEN 1
                WHEN '4-10 KM' THEN 2
                WHEN '10-25 KM' THEN 3
                WHEN '25-60 KM' THEN 4
                ELSE 5 END

                

-- 26. Cluster trips by pickup time(3 hour slab), trip distance, fare, and passenger count 

select 
    case when hour(pickuptime)<=2 then '0-3'
        when hour(pickuptime)>2 and hour(pickuptime)<=5 then '3-6'
        when hour(pickuptime)>5 and hour(pickuptime)<=8 then '6-9'
        when hour(pickuptime)>8 and hour(pickuptime)<=11 then '9-12'
        when hour(pickuptime)>11 and hour(pickuptime)<=14 then '12-15'
        when hour(pickuptime)>14 and hour(pickuptime)<=17 then '15-18'
        when hour(pickuptime)>17 and hour(pickuptime)<=20 then '18-21'
        when hour(pickuptime)>20 then '21-24' end as Time_slab
    ,sum(tripdist) Trip_Dist,
     round(sum(fare_amnt)+sum(surge_fee),1) Total_Fare
    ,count(*) No_of_booikngs, 
    sum(passemger_count) Total_Passengers
from uber_trip_details 
group by Time_Slab 
order by case Time_Slab 
    when '0-3' then 1
    when '3-6' then 2
    when '6-9' then 3
    when '9-12' then 4
    when '12-15' then 5
    when '15-18' then 6
    when '18-21' then 7
    when '21-24' then 8 END




-- 27. Cluster trips by pickup time(3 hour slab), trip distance, fare, and passenger count but in %_of_total

select 
    case when hour(pickuptime)<=2 then '0-3'
        when hour(pickuptime)>2 and hour(pickuptime)<=5 then '3-6'
        when hour(pickuptime)>5 and hour(pickuptime)<=8 then '6-9'
        when hour(pickuptime)>8 and hour(pickuptime)<=11 then '9-12'
        when hour(pickuptime)>11 and hour(pickuptime)<=14 then '12-15'
        when hour(pickuptime)>14 and hour(pickuptime)<=17 then '15-18'
        when hour(pickuptime)>17 and hour(pickuptime)<=20 then '18-21'
        when hour(pickuptime)>20 then '21-24' end as Time_slab
    ,round(sum(tripdist)/(select sum(tripdist) from uber_trip_details)*100.0,1) as Trip_Dist_of_perc_in_total
    ,round((sum(fare_amnt)+sum(surge_fee))/(select sum(fare_amnt)+sum(surge_fee) from uber_trip_details)*100.0,1) as Total_Fare_perc_of_total
    ,round(count(*)/(select count(*) from uber_trip_details)*100.0,1) No_of_booikngs_perc_of_total
    ,round(sum(passemger_count)/(select sum(passemger_count) from uber_trip_details)*100.0,1)  Total_Passengers_perc_of_total
from uber_trip_details 
group by Time_Slab 
order by case Time_Slab 
    when '0-3' then 1
    when '3-6' then 2
    when '6-9' then 3
    when '9-12' then 4
    when '12-15' then 5
    when '15-18' then 6
    when '18-21' then 7
    when '21-24' then 8 end




--- 28. which Drop_Off locations contributes most to the Surge_Fee

select 
    location as DropOFF_Loc,
    sum(surge_fee) as Surge_Amount,
    round((sum(surge_fee)/(sum(fare_amnt)+sum(surge_fee)))*100.0,1) location_wise_perc_of_total_rev
from uber_trip_details u 
    inner join loc_info l on l.location_id=u.drop_locid
group by DropOFF_Loc 
having Surge_Amount >350
order by location_wise_perc_of_total_rev desc



---29 Find Total Bookings on the basis of Vehicles and Daytime

Select vehicle,
    sum(CASE WHEN hour(pickuptime) >= 5 and hour(pickuptime) < 12 THEN 1 end) as Morning,
    sum(case WHEN hour(pickuptime) >= 12 AND hour(pickuptime) < 16 THEN 1 end) as Afternoon,
    sum(case WHEN hour(pickuptime) >= 16 AND hour(pickuptime) < 20 THEN 1 end) as Evening,
    sum(case WHEN hour(pickuptime) >= 20 or hour(pickuptime) < 5 THEN 1 end) as Night
from uber_trip_details
group by vehicle



--30 Find Total Surge Amount on the basis of Vehicles and Daytime

Select vehicle,
    sum(CASE WHEN hour(pickuptime) >= 5 and hour(pickuptime) < 12 THEN surge_fee end) as Morning,
    sum(case WHEN hour(pickuptime) >= 12 AND hour(pickuptime) < 16 THEN surge_fee end) as Afternoon,
    sum(case WHEN hour(pickuptime) >= 16 AND hour(pickuptime) < 20 THEN surge_fee end) as Evening,
    sum(case WHEN hour(pickuptime) >= 20 or hour(pickuptime) < 5 THEN surge_fee end) as Night
from uber_trip_details
group by vehicle



-- 31.Find No of Trips on the basis of time of this format : 0-5 minutes, 5-15 minutes, 15 minutes to 1 hour, 1 hour to 3 hour, 3-8 hour,8-24 hour, 24 hour+

with cte as(
    select trip_id,
    timestampdiff(minute,to_timestamp(pickupdate || ' ' || pickuptime),to_timestamp(dropday || ' ' || droptime)) time_intrvl
    from uber_trip_details),
cte2 as(
        select 
        case when time_intrvl<5 then 'Very_Short 0-5min' 
            when time_intrvl>=5 and time_intrvl<16 then 'Short_Ride 5-15min'
            when time_intrvl>=16 and time_intrvl<61 then 'Medium_Ride 15min - 1Hour'
            when time_intrvl>=61 and time_intrvl<181 then 'Long_Ride 1Hour-3Hour'
            when time_intrvl>=181 and time_intrvl<481 then 'Extra_long_ride 3-8Hour'
            when time_intrvl>=481 and time_intrvl<1441 then 'Over_Haul_Ride 8-24Hour'
            else 'Outlier' end as Time_period
            from cte)
select Time_period,count(Time_period) No_of_Rides
from cte2 
group by 1
order by case Time_period 
        when 'Very_Short 0-5min' then 1
        when 'Short_Ride 5-15min' then 2
        when 'Medium_Ride 15min - 1Hour' then 3
        when 'Long_Ride 1Hour-3Hour' then 4
        when 'Extra_long_ride 3-8Hour' then 5
        when 'Over_Haul_Ride 8-24Hour' then 6
        when 'Outlier' then 7 end
